# http://www.yaml.org/YAML_for_ruby.html

development:
  ldp:
    url: http://your.ldp_store_url.here
    # uber_container:  LDP BasicContainer that will have anno containers as members
    uber_container:  anno
    # anno_containers:  LDP BasicContainers that will have individual annotations as members
    #  the container names here will also map to paths in the triannon url, e.g.
    #  "foo" here will mean you add a foo anno by POST to http://your.triannon-server.com/annotations/foo
    #  and you get the foo anno by GET to http://your.triannon-server.com/annotations/foo/(anno_uuid)
    anno_containers:
      - foo
      - blah
  solr_url: http://your.triannon_solr_url.here
  # triannon_base_url:  the prefix for the urls for your annos
  triannon_base_url: http://your.triannon-server.com/annotations/
  max_solr_retries: 5
  base_sleep_seconds: 1
  max_sleep_seconds: 5
  authorized_clients:
    clientA: secretA
    clientB: secretB
  authorized_users:
    userA: secretA
    userB: secretB
  # expiry values are in seconds
  client_token_expiry: 60
  access_token_expiry: 3600

test: &test
  ldp:
    url: http://your.ldp_store_url.here
    uber_container:  anno
    anno_containers:
      - foo
      - blah
  solr_url: http://your.triannon_solr_url.here
  triannon_base_url: http://your.triannon-server.com/annotations/
  authorized_clients:
    clientA: secretA
    clientB: secretB
  authorized_users:
    userA: secretA
    userB: secretB
  # expiry values are in seconds
  client_token_expiry: 60
  access_token_expiry: 3600

production:
  ldp:
    url: http://your.ldp_store_url.here
    uber_container:  anno
    anno_containers:
      - foo
      - blah
  solr_url: http://your.triannon_solr_url.here
  triannon_base_url: http://your.triannon-server.com/annotations/
  authorized_clients:
  authorized_users:
  # expiry values are in seconds
  client_token_expiry: 60
  access_token_expiry: 3600
